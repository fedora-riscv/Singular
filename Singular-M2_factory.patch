diff -ur /Users/dan/src/M2/trunk/M2/BUILD/dan/builds.tmp/mac64.debug/libraries/factory/tmp/factory-3-1-3/assert.h factory-3-1-3/assert.h
--- /Users/dan/src/M2/trunk/M2/BUILD/dan/builds.tmp/mac64.debug/libraries/factory/tmp/factory-3-1-3/assert.h	2009-11-02 11:12:22.000000000 +0100
+++ factory-3-1-3/assert.h	2011-09-21 10:26:14.000000000 +0200
@@ -5,6 +5,9 @@
 #if defined (NDEBUG) && ! defined (NOASSERT)
 #define NOASSERT
 #endif
+ 
+/* need a declaration of "abort" */
+#include <stdlib.h>
 
 /* It should be possible to include this file multiple times for different */
 /* settings of NOASSERT */
diff -ur /Users/dan/src/M2/trunk/M2/BUILD/dan/builds.tmp/mac64.debug/libraries/factory/tmp/factory-3-1-3/cf_cyclo.cc factory-3-1-3/cf_cyclo.cc
--- /Users/dan/src/M2/trunk/M2/BUILD/dan/builds.tmp/mac64.debug/libraries/factory/tmp/factory-3-1-3/cf_cyclo.cc	2010-11-15 16:34:57.000000000 +0100
+++ factory-3-1-3/cf_cyclo.cc	2011-09-21 10:22:45.000000000 +0200
@@ -83,7 +83,7 @@
   }
   if (j >= 31397)
     fail= true;
-  ASSERT (j < 31397, "integer factorizer ran out of primes") //sic
+  ASSERT (j < 31397, "integer factorizer ran out of primes"); //sic
   return result;
 }
 
diff -ur /Users/dan/src/M2/trunk/M2/BUILD/dan/builds.tmp/mac64.debug/libraries/factory/tmp/factory-3-1-3/cf_gcd_smallp.h factory-3-1-3/cf_gcd_smallp.h
--- /Users/dan/src/M2/trunk/M2/BUILD/dan/builds.tmp/mac64.debug/libraries/factory/tmp/factory-3-1-3/cf_gcd_smallp.h	2010-11-22 11:12:46.000000000 +0100
+++ factory-3-1-3/cf_gcd_smallp.h	2011-09-21 10:29:36.000000000 +0200
@@ -24,6 +24,7 @@
 
 #include <config.h>
 #include "assert.h"
+#include <factory/cf_factory.h>
 
 CanonicalForm GCD_Fp_extension (const CanonicalForm& F, const CanonicalForm& G,
                   Variable & alpha, CFList& l, bool& top_level);
diff -ur /Users/dan/src/M2/trunk/M2/BUILD/dan/builds.tmp/mac64.debug/libraries/factory/tmp/factory-3-1-3/facFqSquarefree.h factory-3-1-3/facFqSquarefree.h
--- /Users/dan/src/M2/trunk/M2/BUILD/dan/builds.tmp/mac64.debug/libraries/factory/tmp/factory-3-1-3/facFqSquarefree.h	2010-11-15 16:34:57.000000000 +0100
+++ factory-3-1-3/facFqSquarefree.h	2011-09-21 10:23:54.000000000 +0200
@@ -17,7 +17,7 @@
 #define FAC_FQ_SQUAREFREE_H
 
 #include "assert.h"
-
+#include <factory/cf_factory.h>
 
 /// squarefree factorization over a finite field
 /// @a return a list of squarefree factors with multiplicity
diff -ur /Users/dan/src/M2/trunk/M2/BUILD/dan/builds.tmp/mac64.debug/libraries/factory/tmp/factory-3-1-3/gfops.cc factory-3-1-3/gfops.cc
--- /Users/dan/src/M2/trunk/M2/BUILD/dan/builds.tmp/mac64.debug/libraries/factory/tmp/factory-3-1-3/gfops.cc	2009-11-02 11:12:22.000000000 +0100
+++ factory-3-1-3/gfops.cc	2011-09-21 10:30:53.000000000 +0200
@@ -183,7 +183,7 @@
 
 void gf_setcharacteristic ( int p, int n, char name )
 {
-    ASSERT( gf_valid_combination( p, n ), "illegal immediate GF(q)" );
+  //ASSERT( gf_valid_combination( p, n ), "illegal immediate GF(q)" );
     gf_name = name;
     gf_get_table( p, n );
 }
--- /Users/dan/src/M2/trunk/M2/BUILD/dan/builds.tmp/mac64.debug/libraries/factory/tmp/factory-3-1-3/variable.cc	2010-11-15 16:34:57.000000000 +0100
+++ factory-3-1-3/variable.cc	2011-09-21 10:31:15.000000000 +0200
@@ -169,7 +169,7 @@
 
 Variable rootOf( const CanonicalForm & mipo, char name )
 {
-    ASSERT( legal_mipo( mipo ), "not a legal extension" );
+  //ASSERT( legal_mipo( mipo ), "not a legal extension" );
 
     int l;
     if ( var_names_ext == 0 ) {
